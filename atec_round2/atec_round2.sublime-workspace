{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"collect",
				"collect_set"
			],
			[
				"devi",
				"device_sign"
			],
			[
				"cli",
				"client_ip"
			],
			[
				"t_sj",
				"t_sj_train_data_code_y0_m9"
			],
			[
				"cer",
				"cert_city"
			],
			[
				"is",
				"is_fraud"
			],
			[
				"EN",
				"ENCRYPT_BYTE_LEN"
			],
			[
				"BY",
				"ENCRYPT_BYTE_LEN"
			],
			[
				"adw",
				"adwFileSize"
			],
			[
				"func",
				"function"
			],
			[
				"param",
				"param_name"
			],
			[
				"Atom",
				"Atom.bat"
			],
			[
				"ex",
				"Exception\tclass"
			],
			[
				"check",
				"check_error"
			],
			[
				"targt",
				"target_date"
			],
			[
				"target",
				"target_date"
			],
			[
				"var",
				"variable_data"
			],
			[
				"CHE",
				"CHECK_DEPEND_SHELL_FILE"
			],
			[
				"ei",
				"exit"
			],
			[
				"exit",
				"exit_code"
			],
			[
				"L",
				"LOG_PATH"
			],
			[
				"variab",
				"variable_date"
			],
			[
				"targe",
				"target_date"
			],
			[
				"box",
				"box_num"
			],
			[
				"file_oup",
				"file_output_base"
			],
			[
				"dict_dta",
				"dict_data_file"
			],
			[
				"fail",
				"fail_file"
			],
			[
				"succ",
				"success_file"
			],
			[
				"err",
				"error_tmp.txt"
			],
			[
				"erro",
				"errorlevel"
			],
			[
				"vari",
				"variable_weight"
			],
			[
				"trian_data",
				"train_data_100"
			],
			[
				"read",
				"read_csv"
			],
			[
				"table",
				"table_name_2"
			],
			[
				"table_na",
				"table_name_1"
			],
			[
				"summ",
				"summary_result"
			],
			[
				"sum",
				"summary_result_1"
			],
			[
				"join",
				"join_result"
			],
			[
				"group",
				"group_name"
			],
			[
				"event",
				"event_name"
			],
			[
				"dist_e",
				"dist_event_contactsrelationship"
			],
			[
				"count_e",
				"count_event_contactsrelationship"
			],
			[
				"varia",
				"variable_name"
			],
			[
				"event_con",
				"event_contactsrelationship_code"
			],
			[
				"event_cha",
				"event_srcchannel"
			],
			[
				"tru",
				"trueip_dist_cid_1day"
			],
			[
				"trup",
				"trueip_dist_cid_3m"
			],
			[
				"cid_ifr",
				"cid_first_apply"
			],
			[
				"event_posi",
				"event_position_code"
			],
			[
				"xiaohua_f",
				"xiaohua_feature_extract_all_v3_b5"
			],
			[
				"event_bankcardt",
				"event_bankcardtype"
			],
			[
				"else",
				"else"
			],
			[
				"event_posin",
				"event_position_code"
			],
			[
				"xiaohua",
				"xiaohua_feature_extract_all_v3_b3"
			],
			[
				"even",
				"event_cid"
			],
			[
				"tmp_t",
				"tmp_tb2"
			],
			[
				"event_cid",
				"event_cid"
			],
			[
				"appa",
				"app_apply_count"
			],
			[
				"cloo",
				"collector_tstamp"
			],
			[
				"ml_la",
				"ml_lables"
			],
			[
				"event_id",
				"event_id"
			],
			[
				"len",
				"length"
			],
			[
				"event_useragent",
				"event_useragent"
			],
			[
				"moblie",
				"mobileCity_code"
			],
			[
				"event_mobileci",
				"event_mobilecity"
			],
			[
				"event_mobile",
				"event_mobilecity"
			],
			[
				"coll",
				"collector_tstamp"
			],
			[
				"event_mobilec",
				"event_mobilecity"
			],
			[
				"event_mobilecity",
				"event_mobilecity_code,factor"
			],
			[
				"label",
				"label_1"
			],
			[
				"na",
				"na_rep"
			],
			[
				"event_mobilecity_code_fla",
				"event_mobilecity_code_sum_flag"
			],
			[
				"event_mobi",
				"event_mobilecity_code_label"
			],
			[
				"label_1_",
				"label_1_div_data"
			],
			[
				"label_1",
				"label_1_div_all"
			],
			[
				"event_mobili",
				"event_mobilecity_code_summary"
			],
			[
				"labe",
				"label_1"
			],
			[
				"to",
				"to_csv"
			],
			[
				"event_mobil",
				"event_mobilecity_code_summary"
			],
			[
				"event_mo",
				"event_mobilecity_code_summary"
			],
			[
				"event_ombil",
				"event_mobilecity_code"
			],
			[
				"cid_apply_",
				"cid_apply_1m_hf"
			],
			[
				"cid_app",
				"cid_apply_1m_hf"
			],
			[
				"N",
				"None"
			],
			[
				"as",
				"astype"
			],
			[
				"con",
				"concat\tfunction"
			],
			[
				"event_mobilecity_code_",
				"event_mobilecity_code_label_1"
			],
			[
				"evnet_mo",
				"event_mobilecity_code"
			],
			[
				"event_fptoken",
				"event_fptokenid"
			],
			[
				"drop",
				"drop_duplicates\tfunction"
			],
			[
				"d",
				"drop_duplicates"
			],
			[
				"dict_variable",
				"dict_variable_used_columns"
			],
			[
				"NU",
				"NumberOfMissingValues"
			],
			[
				"sinjor",
				"sinjor_train_data_v3"
			],
			[
				"sinjor_tr",
				"sinjor_train_data_rand_v3"
			],
			[
				"sinjor_db",
				"sinjor_db_train_time"
			],
			[
				"dis",
				"distinct"
			],
			[
				"apply_devi",
				"apply_deviceid_dist_bankcardmobile_1m"
			],
			[
				"apply_devie",
				"apply_deviceid_dist_bankcardno_1m"
			],
			[
				"apply_de",
				"apply_deviceid_dist_mobile_1m"
			],
			[
				"event_bank",
				"event_bankcardmobile"
			],
			[
				"event_cer",
				"event_certno"
			],
			[
				"event_ban",
				"event_bankcardno"
			],
			[
				"event_ce",
				"event_certno"
			],
			[
				"ner",
				"new_feature_derived_all"
			],
			[
				"applo",
				"app_apply_count"
			],
			[
				"app",
				"app_resetpwd_count"
			],
			[
				"appl",
				"app_apply_count"
			],
			[
				"login",
				"login_count"
			],
			[
				"event_bankcardmobil",
				"event_bankcardmobile"
			],
			[
				"true",
				"trueip_dist_cid_1day"
			],
			[
				"sub",
				"substring_index"
			],
			[
				"event_mob",
				"event_mobileCity"
			],
			[
				"eve",
				"event_cid"
			],
			[
				"evnet",
				"event_cid"
			],
			[
				"event_contac",
				"event_contactsname"
			],
			[
				"event_contactsre",
				"event_contactsrelationship"
			],
			[
				"event_contactsmobl",
				"event_contactsmobile"
			],
			[
				"event_gps",
				"event_gpsCity"
			],
			[
				"event_lo",
				"event_longitude"
			],
			[
				"event_ip",
				"event_iplatitude"
			],
			[
				"firt",
				"cid_first_loan"
			],
			[
				"sinjor_",
				"sinjor_train_data_rand"
			],
			[
				"sinjor_tain",
				"sinjor_train_data_time"
			],
			[
				"sinjor_train",
				"sinjor_train_data_time"
			],
			[
				"sinjor_tri",
				"sinjor_train_data_time"
			],
			[
				"databa",
				"database_label"
			],
			[
				"xiaoh",
				"xiaohua_feature_extract_all"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "drop table if exists t_sj_test_feature_data;\n\ncreate table t_sj_test_feature_data as\nselect t1.event_id,\n       t1.gmt_occur,\n       t1.hour,\n       t1.hour_bin,\n       t1.network,\n       -- t1.info_1,\n -- t1.info_2,\n\n       t1.is_one_people,\n       t1.mobile_oper_platform,\n       t1.operation_channel,\n       t1.pay_scene,\n       t1.amt,\n       t2.id_cnt_24h,\n       t2.id_ucnt_device_sign_24h,\n       t2.id_ucnt_network_24h,\n       t2.id_ucnt_client_ip_24h,\n       t2.id_ucnt_ip_prov_24h,\n       t2.id_ucnt_ip_city_24h,\n       t2.id_ucnt_operation_channel_24h,\n       t2.id_ucnt_pay_scene_24h,\n       t2.id_cnt_1h,\n       t2.id_ucnt_device_sign_1h,\n       t2.id_ucnt_network_1h,\n       t2.id_ucnt_client_ip_1h,\n       t2.id_ucnt_ip_prov_1h,\n       t2.id_ucnt_ip_city_1h,\n       t2.id_ucnt_operation_channel_1h,\n       t2.id_ucnt_pay_scene_1h,\n       t2.gmt_occur_unix_diff,\n       t2.gmt_occur_unix_diff_not_now,\n       t2.uid_client_ip_rate_24h,\n       t2.uid_network_rate_24h,\n       t2.uid_device_sign_rate_24h,\n       t2.uid_ip_prov_rate_24h,\n       t2.uid_ip_city_rate_24h,\n       t2.uid_mobile_oper_platform_rate_24h,\n       t2.uid_operation_channel_rate_24h,\n       t2.uid_pay_scene_rate_24h,\n       t3.device_cnt_24h,\n       t3.device_ucnt_user_id_24h,\n       t3.device_ucnt_network_24h,\n       t3.device_ucnt_client_ip_24h,\n       t3.device_ucnt_ip_prov_24h,\n       t3.device_ucnt_ip_city_24h,\n       t3.device_ucnt_operation_channel_24h,\n       t3.device_ucnt_pay_scene_24h,\n       t3.device_cnt_1h,\n       t3.device_ucnt_user_id_1h,\n       t3.device_ucnt_network_1h,\n       t3.device_ucnt_client_ip_1h,\n       t3.device_ucnt_ip_prov_1h,\n       t3.device_ucnt_ip_city_1h,\n       t3.device_ucnt_operation_channel_1h,\n       t3.device_ucnt_pay_scene_1h,\n       t3.gmt_occur_unix_device_diff,\n       t3.gmt_occur_unix_device_diff_not_now,\n       t3.device_client_ip_rate_24h,\n       t3.device_network_rate_24h,\n       t3.device_user_id_rate_24h,\n       t3.device_ip_prov_rate_24h,\n       t3.device_ip_city_rate_24h,\n       t3.device_mobile_oper_platform_rate_24h,\n       t3.device_operation_channel_rate_24h,\n       t3.device_pay_scene_rate_24h\nfrom t_sj_test_feature_base t1\nleft outer join t_sj_test_feature_uid_notnull t2 on t1.event_id = t2.event_id\nleft outer join t_sj_test_feature_device_notnull t3 on t1.event_id = t3.event_id;\n\n\n\ndrop table if exists result;\n\n\ncreate table result as\nselect event_id as id,\n       (1 - prediction_score) as score\nfrom result_0806; \n\n\n\n \n-- left outer join\n--     (select event_id,\n--             is_fraud\n--      from t_sj_train_data_code_unix) t3 on t1.event_id = t3.event_id;\n\n-- drop table if exists t_sj_train_dataset;\n\n-- create table t_sj_train_dataset as\n-- select *\n-- from t_sj_train_feature_data\n-- where gmt_occur <'2017-10-20 00';\n\n-- drop table if exists t_sj_tset_dataset;\n\n-- create table t_sj_tset_dataset as\n-- select *\n-- from t_sj_train_feature_data\n-- where gmt_occur >='2017-10-20 00';\n\n-- select count(*),\n--        count(*)/ 9600000\n-- from t_sj_train_feature_data\n-- where gmt_occur >'2017-10-20 00'\n\n-- select count(event_id) as event_id_cnt,\n--        count(hour) as hour_cnt,\n--        count(hour_bin) as hour_bin_cnt,\n--        count(network) as network_cnt,\n--        count(info_1) as info_1_cnt,\n--        count(info_2) as info_2_cnt,\n--        count(is_one_people) as is_one_people_cnt,\n--        count(mobile_oper_platform) as mobile_oper_platform_cnt,\n--        count(operation_channel) as operation_channel_cnt,\n--        count(pay_scene) as pay_scene_cnt,\n--        count(amt) as amt_cnt\n-- from t_sj_train_feature_data;\n\n\n",
			"file": "test_feature_all.sql",
			"file_size": 3733,
			"file_write_time": 131782150292356969,
			"settings":
			{
				"buffer_size": 3610,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"file": "test_feature_device.sql",
			"settings":
			{
				"buffer_size": 17723,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "feature_train.sql",
			"settings":
			{
				"buffer_size": 3464,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "-- 字段名称\t解释\n-- event_id\t事件id\n-- user_id\t虚拟用户ID\n-- gmt_occur\t事件发生时间\n-- client_ip\t用户IP\n-- network\t网络类型\n-- device_sign\t设备ID\n-- info_1\t信息1\n-- info_2\t信息2\n-- ip_prov\tIP省\n-- ip_city\tIP市\n-- cert_prov\t证件省\n-- cert_city\t证件市\n-- card_bin_prov\t支付卡bin省\n-- card_bin_city\t支付卡bin市\n-- card_mobile_prov\t支付账号省\n-- card_mobile_city\t支付账号市\n-- card_cert_prov\t支付卡省\n-- card_cert_city\t支付卡市\n-- is_one_people\t主次双方证件是否一致\n-- mobile_oper_platform\t手机操作平台\n-- operation_channel\t支付方式\n-- pay_scene\t支付场景\n-- amt\t金额\n-- card_cert_no\t虚拟用户证件号\n-- opposing_id\t对方虚拟用户ID\n-- income_card_no\t虚拟用户的收款银行卡号\n-- income_card_cert_no\t虚拟收款用户的证件号\n-- income_card_mobile\t虚拟收款用户的手机号\n-- income_card_bank_code\t收入账号银行代码\n-- province\t收入账号归属省份\n-- city\t虚拟收款用户归属城市\n-- is_peer_pay\t是否代付\n-- version\t版本号\n-- is_fraud\t预测标签\n -- 合并训练集表格\n\n\n-- org_train_data\ndrop table if exists t_sj_train_analysis;\n\n\ncreate table t_sj_train_analysis as\nselect \"user_id\" as name,\n       count(user_id) as cnt,\n       count(distinct user_id) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"client_ip\" as name,\n       count(client_ip) as cnt,\n       count(distinct client_ip) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"network\" as name,\n       count(network) as cnt,\n       count(distinct network) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"device_sign\" as name,\n       count(device_sign) as cnt,\n       count(distinct device_sign) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"info_1\" as name,\n       count(info_1) as cnt,\n       count(distinct info_1) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"info_2\" as name,\n       count(info_2) as cnt,\n       count(distinct info_2) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"ip_prov\" as name,\n       count(ip_prov) as cnt,\n       count(distinct ip_prov) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"ip_city\" as name,\n       count(ip_city) as cnt,\n       count(distinct ip_city) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"cert_prov\" as name,\n       count(cert_prov) as cnt,\n       count(distinct cert_prov) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"cert_city\" as name,\n       count(cert_city) as cnt,\n       count(distinct cert_city) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"card_bin_prov\" as name,\n       count(card_bin_prov) as cnt,\n       count(distinct card_bin_prov) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"card_bin_city\" as name,\n       count(card_bin_city) as cnt,\n       count(distinct card_bin_city) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"is_one_people\" as name,\n       count(is_one_people) as cnt,\n       count(distinct is_one_people) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"mobile_oper_platform\" as name,\n       count(mobile_oper_platform) as cnt,\n       count(distinct mobile_oper_platform) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"operation_channel\" as name,\n       count(operation_channel) as cnt,\n       count(distinct operation_channel) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"pay_scene\" as name,\n       count(pay_scene) as cnt,\n       count(distinct pay_scene) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"amt\" as name,\n       count(amt) as cnt,\n       count(distinct amt) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"card_cert_no\" as name,\n       count(card_cert_no) as cnt,\n       count(distinct card_cert_no) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"opposing_id\" as name,\n       count(opposing_id) as cnt,\n       count(distinct opposing_id) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"income_card_no\" as name,\n       count(income_card_no) as cnt,\n       count(distinct income_card_no) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"income_card_cert_no\" as name,\n       count(income_card_cert_no) as cnt,\n       count(distinct income_card_cert_no) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"income_card_mobile\" as name,\n       count(income_card_mobile) as cnt,\n       count(distinct income_card_mobile) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"income_card_bank_code\" as name,\n       count(income_card_bank_code) as cnt,\n       count(distinct income_card_bank_code) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"province\" as name,\n       count(province) as cnt,\n       count(distinct province) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"city\" as name,\n       count(city) as cnt,\n       count(distinct city) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"is_peer_pay\" as name,\n       count(is_peer_pay) as cnt,\n       count(distinct is_peer_pay) as unique_cnt\nfrom atec_1000w_ins_data\nunion\nselect \"version\" as name,\n       count(version) as cnt,\n       count(distinct version) as unique_cnt\nfrom atec_1000w_ins_data;\n\n\n\n-- train_code\ndrop table if exists t_sj_train_code_analysis;\n\ncreate table t_sj_train_code_analysis as\nselect \"user_id\" as name,\n       count(user_id) as cnt,\n       count(distinct user_id) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"client_ip\" as name,\n       count(client_ip) as cnt,\n       count(distinct client_ip) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"network\" as name,\n       count(network) as cnt,\n       count(distinct network) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"device_sign\" as name,\n       count(device_sign) as cnt,\n       count(distinct device_sign) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"info_1\" as name,\n       count(info_1) as cnt,\n       count(distinct info_1) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"info_2\" as name,\n       count(info_2) as cnt,\n       count(distinct info_2) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"ip_prov\" as name,\n       count(ip_prov) as cnt,\n       count(distinct ip_prov) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"ip_city\" as name,\n       count(ip_city) as cnt,\n       count(distinct ip_city) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"cert_prov\" as name,\n       count(cert_prov) as cnt,\n       count(distinct cert_prov) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"cert_city\" as name,\n       count(cert_city) as cnt,\n       count(distinct cert_city) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"card_bin_prov\" as name,\n       count(card_bin_prov) as cnt,\n       count(distinct card_bin_prov) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"card_bin_city\" as name,\n       count(card_bin_city) as cnt,\n       count(distinct card_bin_city) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"card_mobile_prov\" as name,\n       count(card_mobile_prov) as cnt,\n       count(distinct card_mobile_prov) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"card_mobile_city\" as name,\n       count(card_mobile_city) as cnt,\n       count(distinct card_mobile_city) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"card_cert_prov\" as name,\n       count(card_cert_prov) as cnt,\n       count(distinct card_cert_prov) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"card_cert_city\" as name,\n       count(card_cert_city) as cnt,\n       count(distinct card_cert_city) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"is_one_people\" as name,\n       count(is_one_people) as cnt,\n       count(distinct is_one_people) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"mobile_oper_platform\" as name,\n       count(mobile_oper_platform) as cnt,\n       count(distinct mobile_oper_platform) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"operation_channel\" as name,\n       count(operation_channel) as cnt,\n       count(distinct operation_channel) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"pay_scene\" as name,\n       count(pay_scene) as cnt,\n       count(distinct pay_scene) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"amt\" as name,\n       count(amt) as cnt,\n       count(distinct amt) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"card_cert_no\" as name,\n       count(card_cert_no) as cnt,\n       count(distinct card_cert_no) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"opposing_id\" as name,\n       count(opposing_id) as cnt,\n       count(distinct opposing_id) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"income_card_no\" as name,\n       count(income_card_no) as cnt,\n       count(distinct income_card_no) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"income_card_cert_no\" as name,\n       count(income_card_cert_no) as cnt,\n       count(distinct income_card_cert_no) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"income_card_mobile\" as name,\n       count(income_card_mobile) as cnt,\n       count(distinct income_card_mobile) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"income_card_bank_code\" as name,\n       count(income_card_bank_code) as cnt,\n       count(distinct income_card_bank_code) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"province\" as name,\n       count(province) as cnt,\n       count(distinct province) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"city\" as name,\n       count(city) as cnt,\n       count(distinct city) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"is_peer_pay\" as name,\n       count(is_peer_pay) as cnt,\n       count(distinct is_peer_pay) as unique_cnt\nfrom t_sj_train_data_code\nunion\nselect \"version\" as name,\n       count(version) as cnt,\n       count(distinct version) as unique_cnt\nfrom t_sj_train_data_code;\n\ndrop table if exists t_sj_train_code_analysis_pay_scene;\n\ncreate table t_sj_train_code_analysis_pay_scene as\nselect \"user_id\" as name,\n       count(user_id) as cnt,\n       count(distinct user_id) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"client_ip\" as name,\n       count(client_ip) as cnt,\n       count(distinct client_ip) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"network\" as name,\n       count(network) as cnt,\n       count(distinct network) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"device_sign\" as name,\n       count(device_sign) as cnt,\n       count(distinct device_sign) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"info_1\" as name,\n       count(info_1) as cnt,\n       count(distinct info_1) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"info_2\" as name,\n       count(info_2) as cnt,\n       count(distinct info_2) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"ip_prov\" as name,\n       count(ip_prov) as cnt,\n       count(distinct ip_prov) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"ip_city\" as name,\n       count(ip_city) as cnt,\n       count(distinct ip_city) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"cert_prov\" as name,\n       count(cert_prov) as cnt,\n       count(distinct cert_prov) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"cert_city\" as name,\n       count(cert_city) as cnt,\n       count(distinct cert_city) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"card_bin_prov\" as name,\n       count(card_bin_prov) as cnt,\n       count(distinct card_bin_prov) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"card_bin_city\" as name,\n       count(card_bin_city) as cnt,\n       count(distinct card_bin_city) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"card_mobile_prov\" as name,\n       count(card_mobile_prov) as cnt,\n       count(distinct card_mobile_prov) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"card_mobile_city\" as name,\n       count(card_mobile_city) as cnt,\n       count(distinct card_mobile_city) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"card_cert_prov\" as name,\n       count(card_cert_prov) as cnt,\n       count(distinct card_cert_prov) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"card_cert_city\" as name,\n       count(card_cert_city) as cnt,\n       count(distinct card_cert_city) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"is_one_people\" as name,\n       count(is_one_people) as cnt,\n       count(distinct is_one_people) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"mobile_oper_platform\" as name,\n       count(mobile_oper_platform) as cnt,\n       count(distinct mobile_oper_platform) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"operation_channel\" as name,\n       count(operation_channel) as cnt,\n       count(distinct operation_channel) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"pay_scene\" as name,\n       count(pay_scene) as cnt,\n       count(distinct pay_scene) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"amt\" as name,\n       count(amt) as cnt,\n       count(distinct amt) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"card_cert_no\" as name,\n       count(card_cert_no) as cnt,\n       count(distinct card_cert_no) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"opposing_id\" as name,\n       count(opposing_id) as cnt,\n       count(distinct opposing_id) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"income_card_no\" as name,\n       count(income_card_no) as cnt,\n       count(distinct income_card_no) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"income_card_cert_no\" as name,\n       count(income_card_cert_no) as cnt,\n       count(distinct income_card_cert_no) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"income_card_mobile\" as name,\n       count(income_card_mobile) as cnt,\n       count(distinct income_card_mobile) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"income_card_bank_code\" as name,\n       count(income_card_bank_code) as cnt,\n       count(distinct income_card_bank_code) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"province\" as name,\n       count(province) as cnt,\n       count(distinct province) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"city\" as name,\n       count(city) as cnt,\n       count(distinct city) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"is_peer_pay\" as name,\n       count(is_peer_pay) as cnt,\n       count(distinct is_peer_pay) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18\nunion\nselect \"version\" as name,\n       count(version) as cnt,\n       count(distinct version) as unique_cnt\nfrom t_sj_train_data_code where pay_scene!=12 and pay_scene!=18;\n\ndrop table if exists t_sj_train_code_analysis_with_miss;\n\n\ncreate table t_sj_train_code_analysis_with_miss as\nselect * ,\n       (9601365 - cnt) as miss_cnt,\n       ((9601365 - cnt) / 9601365) as miss_rate\nfrom t_sj_train_code_analysis;\n\n\n\n-- 支不同付场景的正负样本比例\n-- 12 18场景下的好人比例最高 \n-- 12 0:1 459360:38=12088\n-- 18 0:1 243135:4=60783\nselect t1.pay_scene,\n       t2.y0_cnt,\n       t3.y1_cnt,\n       t2.y0_cnt /t3.y1_cnt as y0_div_y1_rate\nfrom\n    (select pay_scene\n     from t_sj_train_data_code\n     group by pay_scene) t1\nleft outer join\n    (select pay_scene,\n            count(*) as y0_cnt\n     from\n         (select user_id,\n                 pay_scene,\n                 is_fraud\n          from t_sj_train_data_code\n          where is_fraud == 0) t\n     group by pay_scene) t2 on t1.pay_scene = t2.pay_scene\nleft outer join\n    (select pay_scene,\n            count(*) as y1_cnt\n     from\n         (select user_id,\n                 pay_scene,\n                 is_fraud\n          from t_sj_train_data_code\n          where is_fraud != 0) t\n     group by pay_scene) t3 on t1.pay_scene = t3.pay_scene\n\n-- 不同时间的好坏交易比例，[0,6] 全量训练集中风险最高\nselect t2.hour,\n       t2.y0_cnt,\n       t3.y1_cnt,\n       t2.y0_cnt /t3.y1_cnt as y0_div_y1_rate\nfrom\n    (select hour,\n            count(*) as y0_cnt\n     from\n         (select user_id,\n                 gmt_occur,\n                 cast(substr(gmt_occur,12,2) as bigint) as hour,\n                 is_fraud\n          from t_sj_train_data_code\n          where is_fraud == 0) t\n     group by hour) t2\nleft outer join\n    (select hour,\n            count(*) as y1_cnt\n     from\n         (select user_id,\n                 gmt_occur,\n                 cast(substr(gmt_occur,12,2) as bigint) as hour,\n                 is_fraud\n          from t_sj_train_data_code\n          where is_fraud != 0) t\n     group by hour) t3 on t2.hour = t3.hour;\n\n\n-- 不同星期天数的好坏交易比例，无法区分，都接近167:1\nselect t2.hour,\n       t2.y0_cnt,\n       t3.y1_cnt,\n       t2.y0_cnt /t3.y1_cnt as y0_div_y1_rate\nfrom\n    (select hour,\n            count(*) as y0_cnt\n     from\n         (select user_id,\n                 gmt_occur,\n                 weekday(to_date(gmt_occur,\"yyyy-mm-dd hh\")) as hour,\n                 is_fraud\n          from t_sj_train_data_code\n          where is_fraud == 0) t\n     group by hour) t2\nleft outer join\n    (select hour,\n            count(*) as y1_cnt\n     from\n         (select user_id,\n                 gmt_occur,\n                 weekday(to_date(gmt_occur,\"yyyy-mm-dd hh\")) as hour,\n                 is_fraud\n          from t_sj_train_data_code\n          where is_fraud != 0) t\n     group by hour) t3 on t2.hour = t3.hour;\n",
			"file": "feature_analysis.sql",
			"file_size": 12821,
			"file_write_time": 131779484912941785,
			"settings":
			{
				"buffer_size": 17790,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "feature_user.sql",
			"settings":
			{
				"buffer_size": 20127,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "feature_device_id.sql",
			"settings":
			{
				"buffer_size": 18182,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Default/Syntax Tests.sublime-build",
					""
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"All Syntaxes"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Performance"
				],
				[
					"Packages/Default/Syntax Tests.sublime-build",
					"Regex Compatibility"
				]
			],
			[
				"Packages/Default/Syntax Tests.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				"Syntax Check"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "Package Control: ",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"view",
				"View: Toggle Menu"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"install package  ",
				"Package Control: Install Package→安装插件"
			],
			[
				"install ",
				"Package Control: Install Package→安装插件"
			],
			[
				"in",
				"Package Control: Install Package→安装插件"
			],
			[
				"i",
				"Package Control: Install Package→安装插件"
			]
		],
		"width": 410.0
	},
	"console":
	{
		"height": 146.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/G/program_monkey/github_code/kernel/atec_round2"
	],
	"file_history":
	[
		"/G/program_monkey/github_code/kernel/atec_round2/feature_analysis.sql",
		"/G/program_monkey/github_code/TalkingData/scripts/main.py",
		"/G/taodata/R_source/R-3.4.3/R-3.4.3/src/library/base/R/files.R",
		"/G/taodata/R_source/R-3.4.3/R-3.4.3/src/library/base/R/library.R",
		"/G/taodata/AtomExe/bryte/bryte/bryte.cpp",
		"/G/taodata/AtomExe/aes.cpp",
		"/G/taodata/AtomExe/aes",
		"/G/taodata/AtomExe/AtomExe/AtomLock.cpp",
		"/G/taodata/github_code/draft/atom.py",
		"/G/taodata/github_code/scripe/R/r_test.R",
		"/C/Users/Administrator/Desktop/Meek1.0/Meek1.0/RCode/Meek.R",
		"/C/Users/Administrator/Desktop/Meek1.0/Meek1.0/RCode/arima.best.R",
		"/G/taodata/AtomExe/AtomExe/AtomCpp_Mac/Atom.sh",
		"/G/taodata/AtomExe/AtomExe/Atom.sh",
		"/G/taodata/github_code/kernel/general/autoplot.py",
		"/G/taodata/github_code/kernel/tensorflow/mnist.py",
		"/G/taodata/github_code/kernel/numpy/numpy_test.py",
		"/G/taodata/project/german_credit/atom7.2_0222_test/base/conf/atom_explore.json",
		"/G/taodata/project/german_credit/atom7.2_0222_test/gbm/conf/atom_act.json",
		"/G/taodata/project/german_credit/atom7.2_0222_test/rf/conf/atom_act.json",
		"/G/taodata/project/german_credit/atom7.2_0222_test/rf/conf/atom_explore.json",
		"/G/taodata/project/german_credit/atom7.2_0222_test/gbm/Atom.bat",
		"/G/taodata/project/german_credit/atom7.2_0222_test/lr/conf/atom_explore.json",
		"/G/taodata/project/german_credit/atom7.2_0222_test/lasso/conf/atom_learn.json",
		"/G/taodata/github_code/kernel/kaggle_market/marketing_response.py",
		"/G/taodata/github_code/scripe/python/analyse.py",
		"/G/taodata/github_code/draft/tensorflow_test.py",
		"/G/taodata/github_code/scripe/shell/taoshu_b.sh",
		"/G/taodata/project/german_credit/atom7.2_dataset_test_v2.py",
		"/G/taodata/project/german_credit/base/conf/atom_explore.json",
		"/G/program_monkey/workspace_jupyter/base/conf/atom_explore.json",
		"/G/taodata/github_code/scripe/python/atom7.2_dataset_test_v3.py",
		"/G/taodata/github_code/scripe/python/atom7.2_default_test_v1.py",
		"/G/taodata/github_code/scripe/python/atom7.2_dataset_test_v2.py",
		"/C/Users/Administrator/Desktop/atom7.2_test/test_dataset/abnormal_test/conf/atom_explore_discretization_true_1.json",
		"/C/Users/Administrator/Desktop/atom7.2_test/test_dataset/abnormal_test/conf/atom_explore_discretization_false_2.json",
		"/C/Users/Administrator/Desktop/atom7.2_test/test_dataset/abnormal_test_round_2/abnormal_dataset_test/atom7.2_dataset_test_v3.py",
		"/C/Users/Administrator/Desktop/atom7.2_test/test_dataset/abnormal_test/conf/atom_explore_discretization_true_2.json",
		"/C/Users/Administrator/Desktop/atom7.2_test/test_dataset/abnormal_test/conf/atom_explore_discretization_false_1.json",
		"/C/Users/Administrator/Desktop/atom7.2_test/test_dataset/abnormal_test/conf/atom_explore_1.json",
		"/C/Users/Administrator/Desktop/atom7.2_test/test_dataset/abnormal_test/conf/atom_explore.json",
		"/G/taodata/github_code/scripe/python/dataset_generate.py",
		"/G/taodata/project/german_credit/atom7.2_0222_test/gbm/conf/atom_explore.json",
		"/G/taodata/project/german_credit/atom7.2_0222_test/gbm/conf/atom_test.json",
		"/C/Users/Administrator/Desktop/atom72exe/PathError.cs",
		"/G/taodata/project/german_credit/atom7.2_0222_test/gbm/conf/atom_learn.json",
		"/C/Users/Administrator/Desktop/atom7.2_test/atom72_20180224_115324/algorithm/lr/conf/atom_act.json",
		"/G/taodata/project/german_credit/atom72_20180224_115538/algorithm/adaboost/conf/atom_act.json",
		"/G/taodata/github_code/scripe/python/atom7.2_dataset_test.py",
		"/G/taodata/github_code/scripe/python/atom_like.py",
		"/G/taodata/github_code/scripe/python/atom7.2_change_v2.py",
		"/G/taodata/github_code/kernel/general/data_summary.py",
		"/C/Users/Administrator/Desktop/atom7.2_test/test_dataset/abnormal_test/conf/atom_explore_discretization_true.json",
		"/C/Users/Administrator/Desktop/atom7.2_test/test_dataset/abnormal_test/base/atom_explore.json",
		"/G/taodata/project/german_credit/atom7.2_dataset_test_v3.py",
		"/G/taodata/project/german_credit/atom7.2_dataset_test.py",
		"/G/taodata/github_code/kernel/tensorflow/minist.py",
		"/G/taodata/project/german_credit/atom72_20180224_095720/result/log_20180224_095720.txt",
		"/C/Users/Administrator/Desktop/atom7.2_test/data_quant/atom72_quant_20180226_142202/result/log_20180226_142202.txt",
		"/G/program_monkey/workspace_jupyter/atom72_20180224_151156/conf/atom_act.json",
		"/G/taodata/project/german_credit/atom72_20180224_105213/result/log_20180224_105213.txt",
		"/G/taodata/project/german_credit/atom7.2_0222_test/lr/Atom.bat",
		"/G/taodata/project/german_credit/atom7.2_0222_test/gbm/atom7.2_change_v2.py",
		"/G/taodata/project/german_credit/atom7.2_0222_test/xgboost/conf/atom_learn.json",
		"/G/taodata/project/german_credit/atom7.2_0222_test/xgboost/conf/atom_explore.json",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/conf/atom_explore.json",
		"/G/taodata/project/german_credit/atom7.2_0222_test/gbm_onehot_20/conf/atom_explore.json",
		"/G/taodata/project/german_credit/atom7.2_0222_test/gbm_onehot_20/conf/atom_learn.json",
		"/G/taodata/github_code/scripe/python/atom_explore_test.py",
		"/C/Users/Administrator/Desktop/behavior_data_source_useful_flatten_2.sql",
		"/G/taodata/github_code/github_code.sublime-workspace",
		"/C/Users/Administrator/Desktop/MySQL57.bat",
		"/G/program_monkey/ML/kaggle/Springleaf_Marketing_Response/marketing_response.py",
		"/C/Users/Administrator/Desktop/jutyter_notebook.bat",
		"/C/Users/Administrator/.jupyter/jupyter_notebook_config.py",
		"/C/Users/Administrator/Desktop/python_pandas.py",
		"/G/taodata/scripe/python/dict_general.py",
		"/C/Users/Administrator/Desktop/python_test.py",
		"/G/taodata/scripe/python/hive_general.py",
		"/C/Users/Administrator/Desktop/module/autoplot.py",
		"/C/Users/Administrator/Desktop/module/deal.py",
		"/C/Users/Administrator/Desktop/module/xiaohua.py",
		"/C/Users/Administrator/Desktop/module/test.py",
		"/C/Users/Administrator/Desktop/python_taodata.py",
		"/G/program_monkey/ML/kaggle/Springleaf_Marketing_Response/banch_mark.py",
		"/G/taodata/project/xiaohua_finance/data_0125_sinjor_rand_v3_b2_atom_7.2_true_rand/gbm_onehot_50/modle_analyse.py",
		"/G/taodata/scripe/python/data_summary.py",
		"/G/taodata/project/xiaohua_finance/data_0125_sinjor_rand_v3_b2_atom_7.2_true_rand/gbm_onehot_50/atom7.2_change_v2.py",
		"/G/taodata/scripe/python/atom_like.py",
		"/C/Users/Administrator/Desktop/atom7.2_test/atom_explore_test.py",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/conf/explore0.json",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/conf/explore1.json",
		"/G/program_monkey/ML/kaggle/Springleaf_Marketing_Response/problem.txt",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/Atom.bat",
		"/G/taodata/project/german_credit/atom7.2_0211_test_tmp/gbm_onehot_20/Atom.bat",
		"/G/taodata/project/german_credit/atom7.2_0211_test_tmp/gbm_onehot_20/test_result/success_file/atom_learn.json",
		"/G/taodata/project/german_credit/atom7.2_0211_test_tmp/gbm_onehot_20/test_result/fail_file/atom_learn_gbm0.json",
		"/G/taodata/project/german_credit/atom7.2_0211_test_tmp/gbm_onehot_20/test_result/explore_test_log_2018_02_13_14_23.txt/explore_error_2018_02_13_14_23.txt",
		"/G/taodata/project/german_credit/atom7.2_0211_test_tmp/gbm_onehot_20/test_result/explore_test_log_2018_02_13_14_12.txt/explore_error_2018_02_13_14_12.txt",
		"/G/taodata/project/german_credit/atom7.2_0211_test_tmp/gbm_onehot_20/conf/atom_learn.json",
		"/G/taodata/project/german_credit/atom7.2_0211_test_tmp/gbm_onehot_20/Atom_test.bat",
		"/C/Users/Administrator/Desktop/atom7.2_test/atom_learn_test.py",
		"/E/atom7.2/conf/atom_explore.json",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/conf/box0/atom_explore0.json",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/explore_error_2018_02_12_13_05.txt",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/explore_error_2018_02_12_13_07.txt",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/error.txt",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/Atom_test.bat",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/error_test.txt",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/conf/atom_explore0.json",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/conf/atom_test.json",
		"/G/taodata/project/german_credit/atom7.2_0211_test/gbm_onehot_20/conf/atom_learn.json",
		"/C/Users/Administrator/Desktop/mysql_to_csv - 副本.bat",
		"/C/Users/Administrator/Desktop/mysql_to_csv.bat",
		"/C/Users/Administrator/Desktop/summary",
		"/C/Users/Administrator/Desktop/atom7.2算法测试时间估计.py",
		"/E/python/Lib/site-packages/lesscpy/lessc/lexer.py",
		"/C/Users/Administrator/Desktop/atom7.2_test/新建文本文档.py",
		"/C/Users/Administrator/Desktop/atom7.2测试/新建文本文档.py",
		"/F/GoogleDownload/first+jupyter (1).py",
		"/G/taodata/scripe/python/asdf2.sql",
		"/G/taodata/scripe/python/asdf4.sql",
		"/G/taodata/scripe/python/asdf3.sql",
		"/G/taodata/project/xiaohua_finance/data_0129_sinjor_rand_v3_b45_to_b5_atom_7.2/input/xh_dict.csv",
		"/G/taodata/project/kaggle_market_response/atom7.2_0207_rand_v1/rf/Atom.bat",
		"/G/taodata/project/xiaohua_finance/data_0129_sinjor_rand_v3_b45_to_b5_atom_7.2/gbm_onehot_50/Output/Act/DecisionData.csv",
		"/G/taodata/project/kaggle_market_response/atom7.2_0207_rand_v1/rf/Output/Explore/IV.csv",
		"/G/taodata/project/kaggle_market_response/atom7.2_0207_rand_v1/rf/Output/Explore/Summary_ModelingTrainData_NumericVars.csv"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 118.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"device_device_sign_cnt_24h",
			"device_device_sign_rate_24h",
			"device_device_sign_cnt_24h",
			"uid",
			"uid_",
			"id_ucnt",
			"feature_user",
			"sj_user",
			"uid",
			"id_ucnt",
			"uid",
			"sj_uid",
			"t_sj_train_data_code_unix",
			"user_id",
			"uid",
			"sj_uid",
			"sj_user",
			"user_id",
			"atec_1000w_oota_data",
			"24",
			"income_card_bank_code",
			"income_card_mobile",
			"income_card_no",
			"card_cert_city",
			"card_cert_prov",
			"card_cert_no",
			"amt",
			"pay_scene",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"card_mobile_city",
			"card_mobile_prov",
			"card_bin_city",
			"card_bin_prov",
			"cert_city",
			"cert_prov",
			"ip_city",
			"ip_prov",
			"network",
			"device_sign",
			"client_ip",
			"income_card_bank_code",
			"card_mobile",
			"income_card_no",
			"opposing_id",
			"card_cert_no",
			"pay_scene",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"card_cert_city",
			"card_cert_prov",
			"card_mobile_city",
			"card_mobile_prov",
			"card_bin_city",
			"card_bin_prov",
			"cert_city",
			"cert_prov",
			"ip_city",
			"ip_prov",
			"device_sign",
			"client_ip",
			"as uid_most",
			"uid_cnt",
			"as uid_cnt",
			"ucnt",
			"size(collect_set",
			"income_card_no",
			"opposing_id",
			"card_cert_no",
			"amt",
			"pay_scene",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"cert_city",
			"cert_prov",
			"ip_city",
			"ip_prov",
			"device_sign",
			"network",
			"t1",
			"t2",
			"client_ip",
			"minus",
			"is_peer_pay",
			"city",
			"province",
			"income_card_bank_code",
			"income_card_mobile",
			"income_card_cert_no",
			"income_card_no",
			"opposing_id",
			"card_cert_no",
			"amt",
			"pay_scene",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"card_bin_city",
			"card_bin_prov",
			"cert_city",
			"cert_prov",
			"ip_city",
			"ip_prov",
			"info_2",
			"info_1",
			"device_sign",
			"network",
			"client_ip",
			"client",
			"is_peer_pay",
			"income_card_bank_code",
			"income_card_mobile",
			"income_card_no",
			"info_1",
			"user_id",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"network",
			"net_work",
			"client_ip",
			"province",
			"info_1",
			"device_sign",
			"network"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": true,
		"regex": false,
		"replace_history":
		[
			"device_user_id_cnt_24h",
			"device_user_id_rate_24h",
			"device_user_id_cnt_24h",
			"device_user_id_rate_24h",
			"device",
			"device_ucnt",
			"feature_device",
			"sj_device",
			"device",
			"device_ucnt",
			"device",
			"sj_device",
			"t_sj_train_data_code_unix where device_sign is not null",
			"device_sign",
			"device",
			"sj_device_sign",
			"device_sign",
			"t_sj_test_data_code",
			"1",
			"city",
			"income_card_bank_code",
			"income_card_mobile",
			"income_card_no",
			"card_cert_city",
			"card_cert_prov",
			"card_cert_no",
			"amt",
			"pay_scene",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"card_mobile_city",
			"card_mobile_prov",
			"card_bin_city",
			"card_bin_prov",
			"cert_city",
			"cert_prov",
			"ip_city",
			"ip_prov",
			"network",
			"device_sign",
			"city",
			"income_card_bank_code",
			"card_mobile",
			"income_card_no",
			"opposing_id",
			"card_cert_no",
			"pay_scene",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"card_cert_city",
			"card_cert_prov",
			"card_mobile_city",
			"card_mobile_prov",
			"card_bin_city",
			"card_bin_prov",
			"cert_city",
			"cert_prov",
			"ip_city",
			"ip_prov",
			"network",
			"device_sign",
			"as uid_most_rate",
			"t1.uid_cnt",
			"as uid_miss_rate",
			"cnt",
			"count",
			"version",
			"income_card_no",
			"opposing_id",
			"card_cert_no",
			"amt",
			"pay_scene",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"cert_city",
			"cert_prov",
			"ip_city ",
			"ip_prov",
			"device_sign",
			"t01",
			"t02",
			"network",
			"version",
			"is_peer_pay",
			"city",
			"province",
			"income_card_bank_code",
			"income_card_mobile",
			"income_card_cert_no",
			"income_card_no",
			"opposing_id",
			"card_cert_no",
			"amt",
			"pay_scene",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"card_bin_city",
			"card_bin_prov",
			"cert_city",
			"cert_prov",
			"ip_city",
			"ip_prov",
			"info_2",
			"info_1",
			"device_sign",
			"network",
			"version",
			"is_peer_pay",
			"income_card_bank_code",
			"income_card_mobile",
			"income_card_no",
			"card_cert_no",
			"pay_scene",
			"operation_channel",
			"mobile_oper_platform",
			"is_one_people",
			"network",
			"net_work",
			"city",
			"info_2",
			"info_1",
			"device_sign",
			"network",
			"client_ip"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "test_feature_all.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3610,
						"regions":
						{
						},
						"selection":
						[
							[
								1450,
								1450
							]
						],
						"settings":
						{
							"in_converting": true,
							"origin_encoding": "GBK",
							"syntax": "Packages/SQL/SQL.sublime-syntax",
							"tab_size": 7,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 660.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "test_feature_device.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17723,
						"regions":
						{
						},
						"selection":
						[
							[
								7948,
								7220
							]
						],
						"settings":
						{
							"origin_encoding": "UTF-8",
							"syntax": "Packages/SQL/SQL.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 8671.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "feature_train.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3464,
						"regions":
						{
						},
						"selection":
						[
							[
								177,
								177
							]
						],
						"settings":
						{
							"origin_encoding": "ASCII",
							"syntax": "Packages/SQL/SQL.sublime-syntax",
							"tab_size": 6,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1040.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "feature_analysis.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17790,
						"regions":
						{
						},
						"selection":
						[
							[
								9347,
								15154
							]
						],
						"settings":
						{
							"origin_encoding": "UTF-8",
							"syntax": "Packages/SQL/SQL.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9447.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "feature_user.sql",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 20127,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"origin_encoding": "UTF-8",
							"syntax": "Packages/SQL/SQL.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1289.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "feature_device_id.sql",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18182,
						"regions":
						{
						},
						"selection":
						[
							[
								15064,
								15064
							]
						],
						"settings":
						{
							"origin_encoding": "UTF-8",
							"syntax": "Packages/SQL/SQL.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 9330.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 42.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 115.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Anaconda Python Builder",
	"project": "atec_round2.sublime-project",
	"replace":
	{
		"height": 70.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\Users\\Administrator\\Desktop\\module\\deal.py"
			],
			[
				"pross",
				"cfg\\process.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 375.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"Parent"
			]
		],
		"width": 378.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 256.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
